name: CI/CD (Build, Test & Infra Deploy)

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  id-token: write
  contents: read

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run tests
        run: |
          yarn workspace api test
          yarn workspace infra test
          yarn workspace ingest test

      - name: Build services & infra
        run: |
          yarn workspace api build
          yarn workspace ingest build
          cd infra && yarn build

      - name: Configure AWS credentials
        if: github.event_name == 'push'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: eu-central-1

      - name: Deploy CDK stacks
        if: github.event_name == 'push'
        run: |
          cd infra
          npx cdk deploy --all --require-approval never

      - name: Extract API endpoint
        if: github.event_name == 'push'
        id: get_api
        run: |
          API_URL=$(aws cloudformation describe-stacks \
            --stack-name ApiStack \
            --query "Stacks[0].Outputs[?OutputKey=='ApiEndpoint'].OutputValue" \
            --output text)
          echo "API_URL=${API_URL}" >> $GITHUB_ENV

      - name: Update Amplify env var
        if: github.event_name == 'push'
        run: |
          aws amplify update-app \
            --app-id ${{ secrets.AMPLIFY_APP_ID }} \
            --environment-variables REACT_APP_API_URL=${{ env.API_URL }}

      - name: Trigger Amplify front-end deploy
        if: github.event_name == 'push'
        run: |
          aws amplify start-job \
            --app-id ${{ secrets.AMPLIFY_APP_ID }} \
            --branch-name main \
            --job-type RELEASE
